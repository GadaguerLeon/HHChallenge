{"version":3,"sources":["components/Sidebar/Sidebar.module.scss","components/ColorTile/ColorTile.module.scss","components/ColorList/ColorList.module.scss","App.module.scss","components/logo-symbol.svg","components/Navbar/NavbarComp.js","components/Sidebar/Sidebar.js","components/ColorTile/ColorTile.js","components/ColorList/ColorList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NavbarComp","Navbar","bg","expand","variant","Brand","href","src","logo","alt","Sidebar","show","hideSidebar","updateFilter","randomColorShow","items","className","styles","RootWrapper","Show","join","IconButton","color","component","onClick","CloseBtn","Button","RandomColorBtn","ItemsList","Item","Array","isArray","map","item","ColorTile","Card","CardContent","ColorBox","style","backgroundColor","colorHexValue","CardActions","Hex","ColorList","colors","randomColor","filter","useState","visibleColors","setVisibleColors","pageCount","setPageCount","page","setPage","useEffect","value","Math","ceil","length","slice","Grid","container","spacing","ColorsList","xs","sm","md","lg","id","Pagination","count","onChange","event","totalResults","prevResults","App","setColors","setFilter","setRandomColor","showSidebar","setShowSidebar","filteredColors","colorsData","colorName","toLowerCase","floor","random","Content","SidebarBtn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8a48af7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RootWrapper\":\"Sidebar_RootWrapper__1AUp4\",\"CloseBtn\":\"Sidebar_CloseBtn__2IK_4\",\"ItemsList\":\"Sidebar_ItemsList__3xQFr\",\"Item\":\"Sidebar_Item__3IHC6\",\"RandomColorBtn\":\"Sidebar_RandomColorBtn__1uxXL\",\"Show\":\"Sidebar_Show__22wM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RootWrapper\":\"ColorTile_RootWrapper__1tUjO\",\"ColorBox\":\"ColorTile_ColorBox__2csyH\",\"Hex\":\"ColorTile_Hex__2G8vt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RootWrapper\":\"ColorList_RootWrapper__1Sokv\",\"ColorsList\":\"ColorList_ColorsList__3mkSw\",\"Pagination\":\"ColorList_Pagination__208A0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1bPiz\",\"Content\":\"App_Content__3tH7W\",\"SidebarBtn\":\"App_SidebarBtn__3sOwp\"};","export default __webpack_public_path__ + \"static/media/logo-symbol.5a22712c.svg\";","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport logo from '../logo-symbol.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst NavbarComp = () => {\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" expand=\"true\" variant=\"light\">\r\n                <Navbar.Brand href=\"#h\">\r\n                    <img\r\n                        src={logo}\r\n                        alt=\"Helpful Human logo\"\r\n                    />\r\n                </Navbar.Brand>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavbarComp;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport styles from './Sidebar.module.scss';\n\nconst Sidebar = ({ show, hideSidebar, updateFilter, randomColorShow }) => {\n    const items = [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\", \"brown\", \"gray\"];\n\n    return (\n        <div className={[styles.RootWrapper, show ? styles.Show : \"\"].join(' ')}>\n            <div>\n                <IconButton color=\"primary\"\n                            component=\"button\"\n                            onClick={hideSidebar}\n                            className={styles.CloseBtn}>\n                    <CloseIcon />\n                </IconButton>\n            </div>\n\n            <Button variant=\"contained\" onClick={randomColorShow} className={styles.RandomColorBtn}>Random Color</Button>\n\n            <ul className={styles.ItemsList}>\n                <li className={styles.Item} onClick={() => updateFilter(\"\")}>All</li>\n                { Array.isArray(items) && items.map(item => (\n                    <li key={item} className={styles.Item} onClick={() => updateFilter(item)}>{ item }</li>\n                )) }\n            </ul>\n        </div>\n    );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport styles from './ColorTile.module.scss';\n\nconst ColorTile = ({ color }) => {\n    return (\n        <Card className={styles.RootWrapper}>\n            <CardContent className={styles.ColorBox} style={{ backgroundColor: color.colorHexValue }} />\n            <CardActions>\n                <span className={styles.Hex}>{ color.colorHexValue }</span>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default ColorTile;\n","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Pagination from '@material-ui/lab/Pagination';\nimport ColorTile from '../ColorTile/ColorTile';\nimport styles from './ColorList.module.scss';\n\nconst ColorList = ({ colors, filter, randomColor }) => {\n    const [visibleColors, setVisibleColors] = useState([]);\n    const [pageCount, setPageCount] = useState(1);\n    const [page, setPage] = useState(1);\n    \n    const itemsShowPerPage = 12;\n\n    const handlePageChange = (event, value) => {\n        const totalResults = (value * itemsShowPerPage);\n        const prevResults =  (itemsShowPerPage * (value - 1));\n        setPage(value);\n\n        setVisibleColors([...colors].slice(prevResults, totalResults));\n    };\n\n    useEffect(() => {\n        const value = Math.ceil(colors.length / itemsShowPerPage);\n        setPageCount(value);\n\n        setVisibleColors([...colors].slice(0, itemsShowPerPage));\n\n        if (randomColor) {\n            setVisibleColors([randomColor]);\n        }\n\n        // eslint-disable-next-line\n    }, [colors, randomColor]);\n\n\n    return (\n        <div className={styles.RootWrapper}>\n            <Grid container spacing={4} className={styles.ColorsList}>\n                { visibleColors.map(color => (\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={color.id}>\n                        <ColorTile color={color} />\n                    </Grid>\n                ))}\n            </Grid>\n\n            { (!randomColor && pageCount > 1) && <Pagination count={pageCount} page={page} onChange={handlePageChange} className={styles.Pagination} /> }\n        </div>\n    );\n};\n\nexport default ColorList;\n","import React, { useState, useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NavbarComp from './components/Navbar/NavbarComp';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport ColorList from './components/ColorList/ColorList';\nimport colorsData from './data/ColorDBData.json';\nimport styles from './App.module.scss';\n\n\nconst App = () => {\n    const [colors, setColors] = useState(\"\");\n    const [filter, setFilter] = useState(\"\");\n    const [randomColor, setRandomColor] = useState(null);\n    const [showSidebar, setShowSidebar] = useState(false);\n\n    const updateFilterHandler = (value) => {\n        setRandomColor(null)\n        setFilter(value);\n        setShowSidebar(false);\n    };\n\n    const randomColorShowHandler = () => {\n        setFilter(\"\");\n        setRandomColor(colorsData[Math.floor(Math.random()*colorsData.length)]);\n        setShowSidebar(false);\n    };\n\n    useEffect(() => {\n        let filteredColors = colorsData.filter(color => {\n            if (filter) {\n                return filter === color.colorName.toLowerCase();\n            }\n            return color;\n        });\n        setColors(filteredColors);\n    }, [filter]);\n\n    return (\n        <div><NavbarComp/>\n        <div className={styles.App}>\n            \n            <Sidebar show={showSidebar}\n                     hideSidebar={() => setShowSidebar(false)}\n                     updateFilter={updateFilterHandler}\n                     randomColorShow={randomColorShowHandler} />\n\n            <div className={styles.Content}>\n                <IconButton color=\"primary\"\n                            component=\"span\"\n                            className={styles.SidebarBtn}\n                            onClick={() => setShowSidebar(true)}>\n                    <MenuIcon />\n                </IconButton>\n                <ColorList colors={colors}\n                           filter={filter}\n                           randomColor={randomColor} />\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}